# Generated by Django 3.2.4 on 2021-10-28 11:56

import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserBotSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('points', models.IntegerField(default=0)),
                ('self_check_mode', models.BooleanField(default=False,
                                                        help_text='Enable this mode if user cant check himself in browser')),
                ('study_plan_hours', models.PositiveSmallIntegerField(
                    help_text='Amount of hours during user plans to study in specified time interval')),
                ('study_plan_days_duration_time_interval',
                 models.PositiveSmallIntegerField(help_text='Amount of days in one time interval')),
                (
                'user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User bot settings',
                'verbose_name_plural': 'Users bot settings',
            },
        ),
        migrations.CreateModel(
            name='TimeInterval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('initial_duration', models.PositiveSmallIntegerField()),
                ('hours_target', models.PositiveSmallIntegerField()),
                ('hours_completed', models.PositiveSmallIntegerField(default=0)),
                ('penalty', models.IntegerField(default=0)),
                ('status', models.IntegerField(choices=[(1, 'Running'), (2, 'Completed'), (3, 'Failed'), (4, 'On Hold'),
                                                        (5, 'Terminated With Refund'),
                                                        (6, 'Terminated Without Refund')])),
                ('user_bot_settings',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.userbotsettings')),
            ],
            options={
                'verbose_name': 'Time interval',
                'verbose_name_plural': 'Time intervals',
            },
        ),
        migrations.CreateModel(
            name='TerminationApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status',
                 models.IntegerField(choices=[(1, 'Reviewing'), (2, 'Accepted Refund'), (3, 'Declined Refund')],
                                     default=1)),
                ('message', models.TextField(max_length=1000)),
                ('reply', models.TextField(max_length=1000)),
                ('time_interval',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot.timeinterval')),
            ],
            options={
                'verbose_name': 'Termination application',
                'verbose_name_plural': 'Termination applications',
            },
        ),
        migrations.CreateModel(
            name='SessionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('ending_cause', models.IntegerField(choices=[(1, 'Manual'), (2, 'Check Failure')])),
                ('user_bot_settings',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.userbotsettings')),
            ],
            options={
                'verbose_name': 'Session history',
                'verbose_name_plural': 'Sessions histories',
            },
        ),
        migrations.CreateModel(
            name='BotSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('next_check_time', models.DateTimeField()),
                ('user_bot_settings',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot.userbotsettings')),
            ],
            options={
                'verbose_name': 'Bot session',
                'verbose_name_plural': 'Bot sessions',
            },
        ),
    ]
